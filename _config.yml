# Site
repository: Git repository where your resume will be hosted, only required if you are hosting on GitHub (eg. sproogen/modern-resume-theme)
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

# Personal info
name: 이인호
title: >
  Nodejs 백앤드 개발자 (업데이트: 22.07.09)
email: sayyou0918@gmail.com
website: https://dukkeobi.tistory.com/

# Dark Mode (true/false/never)
darkmode: never

# Social links
github_username: mystyle2006

# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&s=brands&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
# gtm: "GTM-0000000"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me (Use this to override about section title)
about_profile_image: images/me.jpeg
about_content: | # this will include new lines to allow paragraphs
  Nodejs & Typescript 백앤드 개발자로 API 개발 및 AWS 인프라 구축 등을 주로 담당했습니다.
  
  제가 생각하는 가장 중요한 가치는 <b>동반 성장</b>입니다.
  동반 성장은 서로의 장점을 더 부각시키고 부족한 점은 서로가 채워주는 것입니다.
  
  이러한 동반 성장을 위해 <mark>성장</mark>, <mark>개발</mark>, <mark>소통</mark> 이라는 3가지 키워드를 가지고 개발하고 있습니다. 
  
  - **성장**: 개발자로서 부족한 역량을 채우기 위해 스터디, 블로그 작성, 한 주의 코드를 진행합니다.
  - **개발**: 협업을 잘하기 위해 git 전략, 배포 버전 관리, 업무 프로세스, 스키마 관리 등 협업에 필요한 모든 내용을 정리하고 개선해나갑니다.
  - **소통**: 일을 잘하기 위해서는 팀원들과 친밀도가 높아야합니다. 친밀도가 높아지기 위해서는 서로에 대해 알아야하는데요. 이러한 친밀도를 높이기 위해 티타임, 실수 공유, 비타민 카드를 통해 부족한 소통을 채워갑니다.

content:
  - title: 요약
    layout: list
    content:
      - layout: left
        title: 고미코퍼레이션
        sub_title: 파트너센터 리드
        caption: 2021.05 ~ 현재
        quote: >
          typescript, nestjs, graphql, typeorm, rds, redis, elastic beanstalk, docker, liquibase, react, turbo, unstated-next
        description: | # this will include new lines to allow paragraphs
          - [배포 속도를 개선하기 위해 zero install 도입](https://dukkeobi.tistory.com/39)
          - [(프론트) 기존 멀티레포 -> 모노레포로 마이그레이션](https://dukkeobi.tistory.com/31)
          - 리포트 시스템 개편을 통해 데이터 로드 속도 향상
          - 월 2만 건 주문 정산 검수 시스템 개편을 통해 정산 운영 시간 단축
          - [확장 가능한 백엔드 서비스 구축을 위해 레이어드 아키텍처 제시하고 적용](https://dukkeobi.tistory.com/20)
          - [기존 테스트 코드 실행 시간을 약 10배 개선](https://dukkeobi.tistory.com/23)
          - 테스트 코드 & 코드리뷰 & 아키텍처 개선 등 개발환경 개선
          - slow query 알람을 통해 정산 시스템 업로드 쿼리 개선 (기존 1분 이상 -> 10초 미만)

#          - **정산 검수 시스템 개편**
#            - 문제: 베트남에서 처리한 정산 및 재고 정보가 정확하지 않는 문제가 발생
#            - 원인: 베트남의 독특한 결제 방식(COD, 현장 결제 또는 반품)이 원인
#            - 해결
#              - OMS(Order Management System) 활용하여 실제 베트남에서 전달하는 주문들과 비교하여 검수하는 시스템 구축
#              - 약 2~3만건 정도되 는 주문들을 업로드 처리 과정에서 발생하는 네트워크 I/O 자원을 query 튜닝를 통해 장애 개선 <br><br>
#
#          - **지속적으로 확장 가능한 소프트웨어 구축**
#            - 문제: 구현 코드를 변경했을 때 모든 도메인에 영향이 가는 문제가 발생
#            - 원인: 추상에 의존하지 않고 구현에 의존되어 있는 다수의 코드들이 존재
#            - 해결
#              - 중요한 도메인부터 추상과 구현을 분리하고 추상에 의존하도록 리팩토링 진행
#              - controller/service/implementation 레이어의 역할과 책임을 고민하고 타 개발자의 블로그들을 보면서 참고하여 적용
#              - 캐시/권한 등 실제 비즈니스 로직과 분리될 수 있는 영역들을 별도의 데코레이터를 만들어 적용
#              - 관련 링크: https://dukkeobi.tistory.com/20 <br><br>
#
#          - **GraphQL 마이그레이션**
#            - 문제: 기존 rest 방식에서 프론트팀이 타입을 작성하는데 많은 시간(약 업무의 70~80%)을 소요
#            - 해결: GraphQL를 도입하여 스키마를 기반으로 백/프론트 타입을 공유하여 프론트 업무 효율을 향상 <br><br>
#
#          - **테스트 코드의 필요성과 패턴 공유**
#            - 문제: 테스트 코드를 작성하지 않아 발생했던 사소한 실수가 반복
#            - 해결: given-when-then 패턴을 공유하고 실제 사례를 작성하여 팀에 공유하여 팀원 모두가 테스트 코드를 작성할 수 있는 인프라를 구축 <br><br>
#
#          - **테스트 코드 실행 속도 개선**
#            - 문제: 테스트 코드 실행 속도가 오래 걸려 업무에 영향을 줌
#            - 원인: ts-jest의 타입 체킹 부분들에서 많은 시간을 소요하고 테스트가 진행됨
#            - 해결
#              - 타입 체킹하는 부분을 제외하여 테스트할 수 있도록 개선하여 속도를 약 10배 개선 (ts-jest -> @swc/jest 활용)
#              - 관련 링크: https://dukkeobi.tistory.com/23 <br><br>
#
#          - **git-flow 적용**
#            - 문제: 소스 코드의 버전 관리가 되지 않는 문제가 발생
#            - 원인: git을 적극적으로 활용하지 않는 사내 문화
#            - 해결
#              - git을 적극적으로 활용하기 위해 팀 전체적인 git 이해도를 높일 수 있도록 교육 진행
#              - 배민에서 공유한 git-flow 블로그를 활용하여 방식을 공유 <br><br>
#
#          - **AWS 알림 구축**
#            - 문제: 실무에 집중하다보면 AWS 자원를 모니터링이 하기 힘들어 문제가 발생한 후 대응하게 됨
#            - 해결: 모든 자원에 모니터링이 필요한 내용(메모리/CPU/Slow Query 등)을 분석하여 특정 임계점이되었을 때 slack으로 알림이 되도록 구축 <br><br>

      - layout: left
        title: 젠틀파이
        sub_title: Node 개발자 (프리랜서)
        caption: 2020.11 ~ 2021.04 (6개월)
        link: https://www.ssgdfs.com/
        quote: >
          es6, express, dialogflow, redis, sequelize
        description: | # this will include new lines to allow paragraphs
          - 자연어 처리를 위해 Google Dialogflow를 활용
          - 자주 반복되는 질문이 많아 캐싱을 적극적으로 활용할 수 있도록 Redis 기술을 제안 & 적용

      - layout: left
        title: 인사서비스 Jober
        sub_title: 개발팀 리드
        caption: 2018.04 ~ 2020.06 (2년 3개월)
        link: https://jober.io/
        quote: >
          express, sequelize, react, redux, rds, elastic beanstalk
        description: | # this will include new lines to allow paragraphs
          - 고용지원금/급여관리/직원 정보 관리 등 다양한 시스템 기획/개발/운영
          - 사수가 없는 상황에서 기술 부채를 해결하기 위해 기술 자문을 제시 및 적용
          - 간편급여이체 서비스 출시 with 하나은행
          - https SSL 인증 만료 이슈 해결 (Route53 + ACM)
          - 동적 Open Graph 구축 (feat. CSR)
#            - CloudFront의 lambda 트리거를 활용하여 여러 랜딩페이지에 대한 html 파일에 각 페이지에 맞는 Open Graph를 주입하여 해결
#            - HB 스미스 CTO, 윤제상님 -> CI/CD를 효율적으로 관리하기 위해 관리형 자원을 함께 도입 ex) EB
#            - 레몬클라우드 CTO, 스티브님 -> 상황마다 필요한 기술 자문을 진행하고 레몬 클라우드의 일부 서비스를 활용하여 일괄 이메일 서비스를 개발 및 적용
#            - Node 기반으로 작성된 어플리케이션에서 하나은행이 제공하는 encrypt/decrypt 라이브러리를 사용하기 위해 AWS Lambda + Java 런타임을 활용하여 해결
#            - 수동으로 관리되는 SSL 인증 만료로 서비스 중단되는 이슈가 발생했다. SSL 갱신을 통해 해당 문제를 바로 해결했지만 장기적 플랜으로 보았을 때 효율적이지 못하다는 판단이 들어 도메인을 AWS Route53로 이전 후 SSL을 ACM(AWS Certificate Manager)으로 관리하도록 변경하여 해결


#          - **주니어로 구성된 사내 개발팀의 기술 부채**
#            - 문제: 1년차로 구성된 3명의 개발자로 기술 부채가 많이 쌓이기 시작
#            - 해결:
#              - 현실적으로 1년차 3명이 해결하기에 어려운 문제라고 판단되어 대표님에게 문의 후 다양한 기술 자문을 실시
#                - HB 스미스 CTO, 윤제상님 -> CI/CD를 효율적으로 관리하기 위해 관리형 자원을 함께 도입 ex) EB
#                - 레몬클라우드 CTO, 스티브님 -> 상황마다 필요한 기술 자문을 진행하고 레몬 클라우드의 일부 서비스를 사용
#                  - 링크: https://github.com/lemoncloud-io/lemon-core <br><br>
#
#          - **대량 이메일 전송 시스템 구축**
#            - 문제: 최대 2~3만 유저에게 동시에 이메일을 전송하는 시스템 구축이 필요
#            - 해결:
#              - SQS + SES + Lamda를 구축하여 이메일 시스템을 구축
#              - 저장소(어떤 저장소를 활용했는지 기억이 나지 않음)를 활용하여 이메일 전송 상태를 관리 <br><br>
#
#          - **간편급여이체 with 하나은행**
#            - 문제: 하나은행의 정책으로 인한 암호화 스펙을 공유 불가로 jar 파일을 공유하여 node 기반으로 작성된 서버에서 구동이 되지 않는 문제
#            - 해결:
#              - AWS Lambda를 활용하여 jar 파일을 실행할 수 있는 서버를 구축하여 node 서버에서 http 통신을 통해 해결 <br><br>
#
#          - **https SSL 인증 만료 이슈**
#            - 문제: 수동으로 관리되는 SSL 인증 만료로 인한 서비스 중단 이슈가 발생
#            - 해결:
#              - 단기적 방향: SSL 인증서를 재발급 받아 재발급 받은 내용으로 재설정 후 해결
#              - 장기적 방향: 도메인을 AWS Route53로 이전 후 SSL을 ACM으로 관리하도록 변경 <br><br>
#
#          - **동적 Open Graph 구축 (feat. SCR)**
#            - 문제: 급여관리, 고용지원금, 채용 등 SPA로 구성된 각 랜딩페이지의 Open Graph를 별도로 구성이 필요
#            - 원인: SCR + CloudFront + S3로 구성되어 동적으로 Open Graph 삽입이 불가능
#            - 해결:
#              - CloudFront의 lambda 트리거를 활용하여 사용자가 해당 html을 받기 전에 html 내용을 파싱하여 각 페이지에 맞게 Open Graph를 적용 <br><br>

      - layout: left
        title: 두산인프라코어
        sub_title: IT 서비스데스크 (인턴)
        caption: 2017.02 ~ 2017.09 (6개월)
        description: | # this will include new lines to allow paragraphs
          - Jira, Confluence 시스템 경험

  - title: Skill
    layout: list
    content:
      - layout: top-middle
        quote: >
          현재 업무에 사용중 혹은 사용했던 기술들입니다.

      - layout: left
        title: Backend
        description: |
          - Nodejs, Express, Nestjs (Typescript), GraphQL
          - TypeORM, Sequelize, liquibase
          - Jest
          - WebStorm, Pycharm

      - layout: left
        title: DevOps
        description: |
          - MySQL
          - Github Action, Jenkins, Liquibase
          - AWS Beanstalk, AWS SQS, Elastic Cache (Redis), RDS, S3, EC2, Cloud Watch
          - Nginx
          - Pinpoint
          - Linux Centos
          - Datagrip
          - git, github

      - layout: left
        title: Frontend
        description: |
          - ES5, ES6
          - React, Vuejs, turbo, graphql-codegen
          - Vuex, Redux, unstated-next
          - css, sass
          - vite, webpack, babel

      - layout: left
        title: etc
        description: |
          - OKR, scrum, jira, confluence, notion, monday.com
          - slack
          - eslint, prettier

  - title: 기타 역량
    layout: list
    content:
      - layout: top-middle
        title:
        sub_title: 팀원들과 목표에 집중하여 동반 성장할 수 있는 팀 빌딩 능력
        caption:
        quote: >
          - 업무 프로세스를 구축하여 목표에 집중할 수 있도록 운영 및 관리<br>
          - 팀원들과 함께 성장할 수 있는 스타디 문화 운영 및 관리<br>
          - 팀원들과 부족한 소통을 위한 문화 운영 및 관리<br>
          - 팀원의 장점을 찾아주어 장점이 극대화되도록 지원<br>
          - 스크럼 & 칸반 등 다양한 애자일 방식의 업무 아이디어를 제시하고 적용

      - layout: top-middle
        title:
        sub_title: 팀의 효율을 올리기 위한 고민과 노력
        caption:
        quote: >
          - webstorm/pycharm + github + jira 자동 연동 가이드라인을 만들어 업무 효율 개선 <br>
          - JIRA 시스템을 잘 활용하지 못하는 부분을 전사적으로 발표하여 팀에 기여 <br>
          - 동일한 실수를 방지하기 위해 실수 공유 문화를 만들어 프로세스를 개선 

  - title: Education
    layout: list
    content:
      - layout: left
        title: 인프런
        sub_title: 우아한형제들 최연소 기술이사 김영한의 스프링 완전 정복
        caption: 2022.06
        quote: > 
          현재 강의 듣는 중
        description: | # this will include new lines to allow paragraphs
          - OOP의 관점을 이해하고 특히 OOP에서 말하는 SOLID 원칙을 실제 실무에서 어떻게 적용할 수 있는지에 대한 이해도를 많이 높일 수 있었습니다.

      - layout: left
        title: 인프런
        sub_title: 얄코의 반응형 프로그래밍 - 자바스크립트로 쉽게 배우는 ReactiveX
        caption: 2022.05
        quote: >
        description: | # this will include new lines to allow paragraphs
          - 반응형 프로그래밍에 대한 이해도를 높이기 위한 강의

      - layout: left
        title: 노마드 코더
        sub_title: 우버 이츠 클론 코딩
        caption: 2022.04
        quote: >
        description: | # this will include new lines to allow paragraphs
          - 백앤드/프론트 팀원들과 Graphql, Nestjs, React 등 우리가 사용하는 기술 스펙에 대한 전반적인 이해도를 함께 향상시키고 서로 소통하는 내용을 공유하고자 모두 함께 강의를 구매하여 듣고 있습니다.

      - layout: left
        title: 인프런
        sub_title: 자바스크립트로 알아보는 함수형 프로그래밍 (ES5) by 유인동
        caption: 2022.03 ~
        quote: >
        description: | # this will include new lines to allow paragraphs
          - 함수형 프로그래밍 강좌를 통해 순수 함수의 필요성과 이해도를 높여 실제 순수 함수를 순수 함수처럼 사용하지 않는 코드를 리팩토링

      - layout: left
        title: 패스트 캠퍼스
        sub_title: The RED 백엔드 에센셜 - 대용량 서비스를 위한 아키텍처 with Redis by 강대명
        caption: 2021.08 ~ 2021. 10
        quote: >
        description: | # this will include new lines to allow paragraphs
          - 현재까지 대용량 서비스 트래픽을 경험해 본 적이 없어 이 부분을 강화하고자 이 강의를 구매하여 시청하였습니다.
          - 대용량 서비스 구축을 위한 서비스 디스커버리, replication, sharding, load balancing, caching 등 다양한 개념들을 간접 경험할 수 있어 좋은 강의가 되었던 것 같습니다.

  - title: 개발자로서 도움이 되었던 책들
    layout: text
    content: | # this will include new lines to allow paragraphs
      - 리팩토링 2판
      - 클린코드
      - 클린 아키텍처

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
# theme: modern-resume-theme (Use this is you are hosting your resume yourself)
# remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
